// Generated by CoffeeScript 1.10.0
(function() {
  var APIInfoContainer, Controller, currentProject, ref, ref1,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Controller = ((ref = window.zooniverse) != null ? (ref1 = ref.controllers) != null ? ref1.BaseController : void 0 : void 0) || require('zooniverse/controllers/base-controller');

  currentProject = require('zooniverse-readymade/current-project');

  APIInfoContainer = (function(superClass) {
    extend(APIInfoContainer, superClass);

    APIInfoContainer.prototype.tagName = 'span';

    APIInfoContainer.prototype.className = 'readymade-api-info-container';

    APIInfoContainer.prototype.href = '';

    APIInfoContainer.prototype.events = {
      click: 'refresh'
    };

    function APIInfoContainer() {
      APIInfoContainer.__super__.constructor.apply(this, arguments);
      this.refresh();
    }

    APIInfoContainer.prototype.refresh = function() {
      var projectInfo;
      projectInfo = currentProject.api.get(this.href);
      return projectInfo.then((function(_this) {
        return function(info) {
          var container, i, len, ref2, results;
          ref2 = _this.el.find('[data-readymade-info-key]');
          results = [];
          for (i = 0, len = ref2.length; i < len; i++) {
            container = ref2[i];
            results.push(container.innerHTML = info[container.getAttribute('data-readymade-info-key')]);
          }
          return results;
        };
      })(this));
    };

    return APIInfoContainer;

  })(Controller);

  module.exports = APIInfoContainer;

}).call(this);
