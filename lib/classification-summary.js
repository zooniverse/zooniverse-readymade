// Generated by CoffeeScript 1.10.0
(function() {
  var ClassificationSumary, Controller, ref, ref1,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Controller = ((ref = window.zooniverse) != null ? (ref1 = ref.controllers) != null ? ref1.BaseController : void 0 : void 0) || require('zooniverse/controllers/base-controller');

  ClassificationSumary = (function(superClass) {
    extend(ClassificationSumary, superClass);

    function ClassificationSumary() {
      return ClassificationSumary.__super__.constructor.apply(this, arguments);
    }

    ClassificationSumary.prototype.DISMISS = 'zooniverse-readymade:classification-summary:dismiss';

    ClassificationSumary.prototype.className = 'readymade-classification-summary';

    ClassificationSumary.prototype.template = require('./templates/classification-summary');

    ClassificationSumary.prototype.elements = {
      '.readymade-existing-comments': 'existingCommentsText',
      '.readymade-existing-comments-count': 'existingCommentsCount',
      '.readymade-talk-link': 'talkLink',
      '.readymade-twitter-link': 'twitterLink',
      '.readymade-facebook-link': 'facebookLink'
    };

    ClassificationSumary.prototype.loadSubject = function(subject) {
      var currentProject;
      currentProject = require('zooniverse-readymade/current-project');
      this.existingCommentsText.hide();
      this.talkLink.attr('href', subject.talkHref());
      this.twitterLink.attr('href', subject.twitterHref());
      this.facebookLink.attr('href', subject.facebookHref());
      return currentProject.api.get("/projects/" + currentProject.api.project + "/talk/subjects/" + subject.zooniverse_id, (function(_this) {
        return function(data) {
          _this.existingCommentsCount.html(data.discussion.comments_count);
          if (data.discussion.comments_count !== 0) {
            return _this.existingCommentsText.show();
          }
        };
      })(this));
    };

    ClassificationSumary.prototype.events = {
      'click button[name="readymade-dont-talk"]': function() {
        return this.trigger(this.DISMISS);
      }
    };

    return ClassificationSumary;

  })(Controller);

  module.exports = ClassificationSumary;

}).call(this);
