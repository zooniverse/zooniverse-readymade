// Generated by CoffeeScript 1.10.0
(function() {
  var Controller, SiteHeader, ref, ref1,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Controller = ((ref = window.zooniverse) != null ? (ref1 = ref.controllers) != null ? ref1.BaseController : void 0 : void 0) || require('zooniverse/controllers/base-controller');

  SiteHeader = (function(superClass) {
    extend(SiteHeader, superClass);

    SiteHeader.prototype.className = 'readymade-site-header';

    SiteHeader.prototype.template = require('./templates/site-header');

    SiteHeader.prototype.elements = {
      '.readymade-site-links': 'linksList'
    };

    function SiteHeader() {
      this.onHashChange = bind(this.onHashChange, this);
      SiteHeader.__super__.constructor.apply(this, arguments);
      addEventListener('hashchange', this.onHashChange);
      setTimeout(this.onHashChange);
    }

    SiteHeader.prototype.addNavLink = function(href, label) {
      var li, link;
      link = document.createElement('a');
      link.href = href;
      link.innerHTML = label;
      link.className = 'readymade-site-link';
      li = document.createElement('li');
      li.appendChild(link);
      this.linksList.append(li);
      return link;
    };

    SiteHeader.prototype.onHashChange = function() {
      var e, panel;
      if (!(window.location.hash === '' || window.location.hash.slice(0, 2) === '#/')) {
        panel = document.querySelector(window.location.hash);
        e = new CustomEvent('activate-in-stack');
        return panel != null ? panel.dispatchEvent(e) : void 0;
      }
    };

    return SiteHeader;

  })(Controller);

  module.exports = SiteHeader;

}).call(this);
